{
  "version": 3,
  "sources": ["../../../../../apps/sprintspace/sprintspace/public/js/editor.bundle.js"],
  "sourcesContent": ["(function() {\n  'use strict';\n  \n  // Utility functions\n  function loadScript(src) {\n    return new Promise(function(resolve, reject) {\n      if (document.querySelector(`script[src=\"${src}\"]`)) {\n        resolve();\n        return;\n      }\n      const script = document.createElement('script');\n      script.src = src;\n      script.onload = resolve;\n      script.onerror = reject;\n      document.head.appendChild(script);\n    });\n  }\n\n  function loadCSS(href) {\n    if (document.querySelector(`link[href=\"${href}\"]`)) {\n      return;\n    }\n    const link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = href;\n    document.head.appendChild(link);\n  }\n\n  function showError(message) {\n    frappe.show_alert({\n      message: message,\n      indicator: 'red'\n    });\n  }\n\n  function showSuccess(message) {\n    frappe.show_alert({\n      message: message,\n      indicator: 'green'\n    });\n  }\n\n  // Kanban configuration\n  const kanbanConfig = {\n    taskDoctype: \"Task\",\n    projectField: \"project\",\n    statusField: \"status\",\n    statuses: [\"Backlog\", \"To Do\", \"In Progress\", \"Review\", \"Done\"],\n    linkMode: \"by_title\" // will be auto-updated to by_name if sprintspace_project exists\n  };\n\n  // Dynamically derive link field and statuses from Task meta\n  let __kanbanConfigured = false;\n  async function configureKanbanFromMeta() {\n    if (__kanbanConfigured) return;\n    try {\n      const meta = await frappe.call({\n        method: \"frappe.client.get_meta\",\n        args: { doctype: kanbanConfig.taskDoctype }\n      });\n      const fields = (meta && meta.message && meta.message.fields) || [];\n      if (fields.some(f => f.fieldname === \"sprintspace_project\")) {\n        kanbanConfig.projectField = \"sprintspace_project\";\n        kanbanConfig.linkMode = \"by_name\";\n      }\n      const statusFieldMeta = fields.find(f => f.fieldname === kanbanConfig.statusField);\n      if (statusFieldMeta && statusFieldMeta.options) {\n        const opts = String(statusFieldMeta.options).split(\"\\n\").map(s => s.trim()).filter(Boolean);\n        if (opts.length) kanbanConfig.statuses = opts;\n      }\n    } catch (e) {\n      console.warn(\"Kanban meta config fallback:\", e);\n    } finally {\n      __kanbanConfigured = true;\n    }\n  }\n\n  // Custom Kanban Tool for Editor.js\n  class SprintSpaceKanbanTool {\n    static get toolbox() {\n      return {\n        title: 'Kanban Board',\n        icon: '<svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"><rect x=\"3\" y=\"4\" width=\"6\" height=\"16\" rx=\"2\"></rect><rect x=\"15\" y=\"4\" width=\"6\" height=\"10\" rx=\"2\"></rect></svg>'\n      };\n    }\n\n    constructor({data}) {\n      this.data = data || {};\n      this.wrapper = null;\n    }\n\n    render() {\n      this.wrapper = document.createElement('div');\n      this.wrapper.classList.add('kanban-wrap');\n      this.wrapper.innerHTML = '<div class=\"kanban-loading\">Loading kanban board...</div>';\n      \n      // Load kanban data after a short delay to ensure the element is in DOM\n      setTimeout(() => {\n        this.loadAndRender();\n      }, 100);\n      \n      return this.wrapper;\n    }\n\n    async loadAndRender() {\n      await configureKanbanFromMeta();\n      if (!cur_frm || !cur_frm.doc) {\n        this.showError('No project context available');\n        return;\n      }\n\n      const projectKey = (kanbanConfig.linkMode === \"by_title\") ? cur_frm.doc.title : cur_frm.doc.name;\n      \n      if (!projectKey) {\n        this.showError('Please save the project first');\n        return;\n      }\n\n      try {\n        const response = await frappe.call({\n          method: \"sprintspace.sprintspace.doctype.sprintspace_project.sprintspace_project.get_tasks_for_project\",\n          args: { \n            project_name: projectKey, \n            project_field: kanbanConfig.projectField, \n            status_field: kanbanConfig.statusField \n          }\n        });\n\n        const tasksByStatus = response.message || {};\n        this.renderKanban(tasksByStatus, projectKey);\n\n      } catch (error) {\n        console.error('Error loading kanban:', error);\n        this.showError('Failed to load kanban board. Check permissions.');\n      }\n    }\n\n    renderKanban(tasksByStatus, projectKey) {\n      this.wrapper.innerHTML = \"\";\n\n      kanbanConfig.statuses.forEach(status => {\n        const column = this.createColumn(status, tasksByStatus[status] || []);\n        this.wrapper.appendChild(column);\n      });\n\n      // Add drag and drop event listeners\n      this.setupDragAndDrop();\n      \n      // Add button to create sample tasks if no tasks exist\n      if (Object.keys(tasksByStatus).length === 0 || \n          Object.values(tasksByStatus).every(tasks => tasks.length === 0)) {\n        this.addSampleTasksButton(projectKey);\n      }\n    }\n\n    createColumn(status, tasks) {\n      const column = document.createElement('div');\n      column.className = 'kanban-col';\n      column.dataset.status = status;\n\n      const header = document.createElement('h4');\n      header.textContent = `${status} (${tasks.length})`;\n      column.appendChild(header);\n\n      const list = document.createElement('div');\n      list.className = 'kanban-list';\n\n      if (tasks.length === 0) {\n        const emptyState = document.createElement('div');\n        emptyState.className = 'empty-state';\n        emptyState.textContent = 'No tasks';\n        list.appendChild(emptyState);\n      } else {\n        tasks.forEach(task => {\n          const card = this.createTaskCard(task);\n          list.appendChild(card);\n        });\n      }\n\n      column.appendChild(list);\n      return column;\n    }\n\n    createTaskCard(task) {\n      const card = document.createElement('div');\n      card.className = 'kanban-card';\n      card.draggable = true;\n      card.dataset.name = task.name;\n\n      const title = document.createElement('div');\n      title.className = 'title';\n      title.textContent = task.subject || task.name;\n\n      const meta = document.createElement('div');\n      meta.className = 'meta';\n      meta.innerHTML = `\n        <span>${task.owner || 'Unassigned'}</span>\n        <span>${task.exp_end_date ? frappe.datetime.str_to_user(task.exp_end_date) : ''}</span>\n      `;\n\n      card.appendChild(title);\n      card.appendChild(meta);\n\n      return card;\n    }\n\n    setupDragAndDrop() {\n      // Drag start\n      this.wrapper.addEventListener('dragstart', (e) => {\n        if (e.target.classList.contains('kanban-card')) {\n          e.target.classList.add('dragging');\n          e.dataTransfer.effectAllowed = 'move';\n        }\n      });\n\n      // Drag end\n      this.wrapper.addEventListener('dragend', (e) => {\n        if (e.target.classList.contains('kanban-card')) {\n          e.target.classList.remove('dragging');\n        }\n        // Remove drag-over class from all columns\n        this.wrapper.querySelectorAll('.kanban-col').forEach(col => {\n          col.classList.remove('drag-over');\n        });\n      });\n\n      // Drag over\n      this.wrapper.addEventListener('dragover', (e) => {\n        e.preventDefault();\n        const column = e.target.closest('.kanban-col');\n        if (column) {\n          // Remove drag-over from all columns first\n          this.wrapper.querySelectorAll('.kanban-col').forEach(col => {\n            col.classList.remove('drag-over');\n          });\n          column.classList.add('drag-over');\n        }\n      });\n\n      // Drop\n      this.wrapper.addEventListener('drop', async (e) => {\n        e.preventDefault();\n        const column = e.target.closest('.kanban-col');\n        const draggingCard = this.wrapper.querySelector('.kanban-card.dragging');\n\n        if (column && draggingCard) {\n          const newStatus = column.dataset.status;\n          const taskName = draggingCard.dataset.name;\n          const list = column.querySelector('.kanban-list');\n\n          // Remove empty state if it exists\n          const emptyState = list.querySelector('.empty-state');\n          if (emptyState) {\n            emptyState.remove();\n          }\n\n          // Move the card visually\n          list.appendChild(draggingCard);\n\n          // Update the status in the backend\n          try {\n            await frappe.call({\n              method: \"sprintspace.sprintspace.doctype.sprintspace_project.sprintspace_project.update_task_status\",\n              args: { \n                task_name: taskName, \n                new_status: newStatus, \n                status_field: kanbanConfig.statusField \n              }\n            });\n\n            showSuccess(`Moved ${taskName} \u2192 ${newStatus}`);\n            \n            // Update column headers with new counts\n            this.updateColumnCounts();\n\n          } catch (error) {\n            console.error('Error updating task status:', error);\n            showError('Failed to update task status');\n            // Reload the kanban to revert the visual change\n            this.loadAndRender();\n          }\n        }\n\n        // Clean up drag-over class\n        this.wrapper.querySelectorAll('.kanban-col').forEach(col => {\n          col.classList.remove('drag-over');\n        });\n      });\n    }\n\n    updateColumnCounts() {\n      this.wrapper.querySelectorAll('.kanban-col').forEach(column => {\n        const status = column.dataset.status;\n        const taskCount = column.querySelectorAll('.kanban-card').length;\n        const header = column.querySelector('h4');\n        header.textContent = `${status} (${taskCount})`;\n      });\n    }\n\n    addSampleTasksButton(projectKey) {\n      const buttonContainer = document.createElement('div');\n      buttonContainer.style.textAlign = 'center';\n      buttonContainer.style.padding = '20px';\n\n      const button = document.createElement('button');\n      button.textContent = 'Create Sample Tasks';\n      button.className = 'btn btn-sm btn-primary';\n      button.onclick = async () => {\n        try {\n          button.disabled = true;\n          button.textContent = 'Creating...';\n\n          await frappe.call({\n            method: \"sprintspace.sprintspace.doctype.sprintspace_project.sprintspace_project.create_sample_tasks\",\n            args: { project_name: projectKey }\n          });\n\n          showSuccess('Sample tasks created successfully!');\n          this.loadAndRender(); // Reload the kanban\n\n        } catch (error) {\n          console.error('Error creating sample tasks:', error);\n          showError('Failed to create sample tasks');\n          button.disabled = false;\n          button.textContent = 'Create Sample Tasks';\n        }\n      };\n\n      buttonContainer.appendChild(button);\n      this.wrapper.appendChild(buttonContainer);\n    }\n\n    showError(message) {\n      this.wrapper.innerHTML = `<div class=\"kanban-error\">${message}</div>`;\n    }\n\n    save() {\n      return {\n        type: 'kanban',\n        timestamp: Date.now()\n      };\n    }\n  }\n\n  // Main editor initialization function\n  async function initSprintSpaceEditor(frm) {\n    if (frm.__sprintspace_editor_inited) return;\n    frm.__sprintspace_editor_inited = true;\n\n    if (!frm.fields_dict.content_json) return;\n\n    const $wrapper = frm.fields_dict.content_json.$wrapper;\n    $wrapper.empty();\n\n    // Add toolbar hint\n    const hint = $(`\n      <div class=\"sprintspace-toolbar-hint\">\n        <span class=\"sprintspace-brand\">SprintSpace</span> \u2022 \n        Type <b>/</b> for commands (text, header, checklist, table, image, divider, kanban)\n      </div>\n    `);\n    $wrapper.append(hint);\n\n    // Add editor container\n    const editorContainer = $(`\n      <div class=\"editor-holder sprintspace-canvas\">\n        <div id=\"sprintspace-editorjs-holder\"></div>\n      </div>\n    `);\n    $wrapper.append(editorContainer);\n\n    // Load CSS\n    loadCSS(\"/assets/sprintspace/css/editor.css\");\n\n    try {\n      // Load Editor.js and plugins\n      await loadScript(\"https://cdn.jsdelivr.net/npm/@editorjs/editorjs@2.30.7/dist/editorjs.umd.min.js\");\n      await loadScript(\"https://cdn.jsdelivr.net/npm/@editorjs/header@2.8.1/dist/header.umd.min.js\");\n      await loadScript(\"https://cdn.jsdelivr.net/npm/@editorjs/checklist@1.6.0/dist/checklist.umd.min.js\");\n      await loadScript(\"https://cdn.jsdelivr.net/npm/@editorjs/table@2.4.1/dist/table.umd.min.js\");\n      await loadScript(\"https://cdn.jsdelivr.net/npm/@editorjs/simple-image@1.6.0/dist/bundle.min.js\");\n      await loadScript(\"https://cdn.jsdelivr.net/npm/@editorjs/delimiter@1.4.0/dist/bundle.min.js\");\n\n      // Parse existing content\n      let data = {};\n      try {\n        data = frm.doc.content_json ? JSON.parse(frm.doc.content_json) : {};\n      } catch(e) {\n        console.warn('Invalid JSON in content_json field:', e);\n        data = {};\n      }\n\n      // Initialize Editor.js\n      let __saveDebounce;\n      const editor = new EditorJS({\n        holder: \"sprintspace-editorjs-holder\",\n        autofocus: true,\n        placeholder: \"Type '/' for commands or start writing...\",\n        tools: {\n          header: Header,\n          checklist: Checklist,\n          table: Table,\n          image: SimpleImage,\n          delimiter: Delimiter,\n          kanban: SprintSpaceKanbanTool\n        },\n        data: (data && data.blocks) ? data : {\n          time: Date.now(),\n          blocks: [{\n            type: 'header',\n            data: {\n              text: frm.doc.title || 'Untitled Project',\n              level: 2\n            }\n          }]\n        },\n        onChange: async () => {\n          clearTimeout(__saveDebounce);\n          __saveDebounce = setTimeout(async () => {\n            try {\n              const output = await editor.save();\n              frm.set_value('content_json', JSON.stringify(output));\n            } catch (error) {\n              console.error('Error saving editor content:', error);\n            }\n          }, 400);\n        }\n      });\n\n      // Store editor instance for potential future use\n      frm.sprintspace_editor = editor;\n\n    } catch (error) {\n      console.error('Error initializing SprintSpace editor:', error);\n      $wrapper.html(`\n        <div class=\"kanban-error\">\n          Failed to load SprintSpace editor. Please check your internet connection and try refreshing the page.\n        </div>\n      `);\n    }\n  }\n\n  // Form event handlers\n  frappe.ui.form.on(\"Sprintspace Project\", {\n    refresh: function(frm) {\n      initSprintSpaceEditor(frm);\n    },\n\n    onload: function(frm) {\n      // Set default content if new document\n      if (frm.is_new() && !frm.doc.content_json) {\n        const defaultContent = {\n          time: Date.now(),\n          blocks: [\n            {\n              type: 'header',\n              data: {\n                text: frm.doc.title || 'New Project',\n                level: 2\n              }\n            },\n            {\n              type: 'paragraph',\n              data: {\n                text: 'Welcome to SprintSpace! Type / to add blocks or use the kanban board to manage your tasks.'\n              }\n            }\n          ]\n        };\n        frm.set_value('content_json', JSON.stringify(defaultContent));\n      }\n    }\n  });\n\n})();\n"],
  "mappings": "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",
  "names": []
}
